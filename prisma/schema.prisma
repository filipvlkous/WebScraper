// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  role    Role     @default(USER)
  password String  @unique
  profile Profile?
  sesssion Session?
}

model Profile {
  id     Int    @id @default(autoincrement())
  bio    String
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
}

model Session {
    id        Int       @id @default(autoincrement())
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    userId Int    @unique
    user   User   @relation(fields: [userId], references: [id])
    expiresAt DateTime
}

model Car {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  title      String
  suffix String?
  vin String? @unique
  image String
  mileage Mileage[]
  price Price[]
  url String
  @@index([vin])
}

model Mileage {
  id    Int    @id @default(autoincrement())
  value  Int
  car   Car   @relation(fields: [carId], references: [id])
  carId Int 
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Price {
  id    Int    @id @default(autoincrement())
  value  Int
  car   Car   @relation(fields: [carId], references: [id])
  carId Int 
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum Transmission {
    Automatic
    Manual
}